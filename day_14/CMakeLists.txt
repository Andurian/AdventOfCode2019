CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT( day_14 )

FIND_PACKAGE( Threads REQUIRED )

SET(TEST_PROJECT_NAME ${PROJECT_NAME}_test)
SET(EXE_PROJECT_NAME ${PROJECT_NAME}_exe)

INCLUDE_DIRECTORIES(
  ../common
)

SET(RESOURCE_FILES
  input_account_01.txt
  input_account_02.txt
)

ADD_LIBRARY( ${PROJECT_NAME}
	Contingent.h
	Contingent.cpp
	Rule.h
	Rule.cpp
	RuleSet.h
	RuleSet.cpp
  reaction.h
  reaction.cpp
  find_path_slow.h
  find_path_slow.cpp
)

TARGET_LINK_LIBRARIES(${PROJECT_NAME}
  common
)

ADD_EXECUTABLE(${TEST_PROJECT_NAME}
  test.cpp
)

TARGET_LINK_LIBRARIES(${TEST_PROJECT_NAME}
  ${PROJECT_NAME}
  CONAN_PKG::boost_test
  common
)

ADD_TEST(test_${TEST_PROJECT_NAME} ${TEST_PROJECT_NAME})

ADD_EXECUTABLE(${EXE_PROJECT_NAME}
  main.cpp
  ${RESOURCE_FILES}
)

TARGET_LINK_LIBRARIES(${EXE_PROJECT_NAME}
  ${PROJECT_NAME}
  common
)

SOURCE_GROUP( "Resources" FILES ${RESOURCE_FILES} )

SET_TARGET_PROPERTIES( ${PROJECT_NAME} ${EXE_PROJECT_NAME} ${TEST_PROJECT_NAME} PROPERTIES
	FOLDER ${PROJECT_NAME}
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}
)

FOREACH(INPUT ${RESOURCE_FILES})
  GET_FILENAME_COMPONENT(FILENAME ${INPUT} NAME)
  CONFIGURE_FILE(${INPUT} "${CMAKE_CURRENT_BINARY_DIR}/${FILENAME}" COPYONLY)
ENDFOREACH()

